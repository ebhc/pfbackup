** Maven Commandlines
*** General notes
mvn
*** Maven orphaned goals
mvn dependency:go-offline
mvn javadoc:javadoc
*** Maven Clean Lifecycle
**** TODO pre-clean  -- executes processes needed prior to the actual project cleaning
**** DONE clean      -- remove all files generated by the previous build
mvn clean
**** TODO post-clean -- executes processes needed to finalize the project cleaning
*** Maven Default Lifecycle
**** TODO validate                -- validate the project is correct and all necessary information is available.
**** TODO initialize              -- initialize build state, e.g. set properties or create directories.
**** TODO generate-sources        -- generate any source code for inclusion in compilation.
**** TODO process-sources         -- process the source code, for example to filter any values.
**** TODO generate-resources      -- generate resources for inclusion in the package.
**** TODO process-resources       -- copy and process the resources into the destination directory, ready for packaging.
**** DONE compile                 -- compile the source code of the project.
mvn       compile
mvn       compile -o
mvn clean compile
mvn clean compile -o
**** TODO process-classes         -- post-process the generated files from compilation, for example to do bytecode enhancement on Java classes.
**** TODO generate-test-sources   -- generate any test source code for inclusion in compilation.
**** TODO process-test-sources    -- process the test source code, for example to filter any values.
**** TODO generate-test-resources -- create resources for testing.
**** TODO process-test-resources  -- copy and process the resources into the test destination directory.
**** DONE test-compile            -- compile the test source code into the test destination directory
mvn       test-compile -o
mvn clean test-compile -o
**** TODO process-test-classes    -- post-process the generated files from test compilation, for example to do bytecode enhancement on Java classes. For Maven 2.0.5 and above.
**** DONE test                    -- run tests using a suitable unit testing framework. These tests should not require the code be packaged or deployed.
mvn       test -o -Dtest=*
mvn       test -o -Dtest=BackupTest
mvn clean test -o -Dtest=*
mvn clean test -o -Dtest=BackupTest
**** TODO prepare-package         -- perform any operations necessary to prepare a package before the actual packaging. This often results in an unpacked, processed version of the package. (Maven 2.1 and above)
**** DONE package                 -- take the compiled code and package it in its distributable format, such as a JAR.
mvn clean package
mvn clean package exec:java -DmainClass=ebhc.pfbackup.Backup
mvn       package exec:java -DmainClass=ebhc.pfbackup.Backup
**** TODO pre-integration-test    -- perform actions required before integration tests are executed. This may involve things such as setting up the required environment.
**** TODO integration-test        -- process and deploy the package if necessary into an environment where integration tests can be run.
**** TODO post-integration-test   -- perform actions required after integration tests have been executed. This may including cleaning up the environment.
**** TODO verify                  -- run any checks to verify the package is valid and meets quality criteria.
**** TODO install                 -- install the package into the local repository, for use as a dependency in other projects locally.
**** TODO deploy                  -- done in an integration or release environment, copies the final package to the remote repository for sharing with other developers and projects.
*** Maven Site Lifecycle
**** pre-site    -- executes processes needed prior to the actual project site generation
mvn       pre-site
**** site        -- generates the project's site documentation
mvn       site
mvn       site -o
mvn clean site
**** post-site   -- executes processes needed to finalize the site generation, and to prepare for site deployment
mvn       post-site
**** site-deploy -- deploys the generated site documentation to the specified web server
mvn       site-deploy
*** /Maven
